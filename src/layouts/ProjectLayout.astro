---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, tags } =
  Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="flex flex-col text-black dark:bg-slate-800 dark:text-white">
    <Header />
    <div class="flex w-full flex-row">
      <main class="flex-grow">
        <article class="flex flex-col gap-4 p-4">
          <div class="flex flex-row justify-between gap-2">
            <h1 class="title text-black dark:text-white">{title}</h1>
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <hr />
          <div class="flex flex-row items-center gap-2">
            {
              heroImage && (
                <div class="h-24 w-24 ">
                  <img
                    class="h-full w-full object-contain"
                    width={720}
                    height={360}
                    src={heroImage}
                    alt=""
                  />
                </div>
              )
            }
            <div class="flex flex-row gap-2">
              {
                tags?.map((tag) => (
                  <a
                    href={`/tags/${tag}`}
                    class="flex h-fit w-fit border-2 p-1"
                  >
                    {tag}
                  </a>
                ))
              }
            </div>
          </div>
          <hr />
          <slot />
        </article>
      </main>
    </div>
    <Footer />
  </body>
</html>
